#!/usr/bin/env node

import { fileURLToPath } from 'node:url';
import { dirname, join } from 'node:path';
import { existsSync } from 'node:fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Try built version first, fallback to source
const builtServerPath = join(__dirname, '..', 'dist', 'server.js');
const sourceServerPath = join(__dirname, '..', 'server.ts');

let serverPath = builtServerPath;
if (!existsSync(builtServerPath) && existsSync(sourceServerPath)) {
  serverPath = sourceServerPath;
}

try {
  const { ViteMCPServer } = await import(serverPath);
  const server = new ViteMCPServer();
  await server.run();
} catch (error) {
  console.error('Failed to start codebase MCP server:', error);
  console.error('Tried loading from:', serverPath);
  process.exit(1);
}